package eigatracker;

import java.awt.Desktop;
import java.awt.Image;
import java.io.File;
import java.io.IOException;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Vennuss
 */
public class MainMenu extends javax.swing.JFrame {
    
    final private BD bd = new BD();
    private int sOption = 2;
    private int sRow = -1;

    /**
     * Creates new form MainMenu
     */
    public MainMenu() {
        try{
            initComponents();
            FM fm = new FM(this);
        }
        catch(Exception ex){
            bd.stopXampp();
            System.exit(1);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        SearchGroup = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ContentTable = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        MoviesRb = new javax.swing.JRadioButton();
        BothRb = new javax.swing.JRadioButton();
        AddButton = new javax.swing.JButton();
        RemoveButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        SearchBar = new javax.swing.JTextField();
        SeriesRb = new javax.swing.JRadioButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        MCPelicula = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        MCSerie = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        MDPelicula = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        MDSerie = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        MVSerie = new javax.swing.JLabel();
        MVPelicula = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        BMovies = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        BSeries = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        MFile = new javax.swing.JMenu();
        ImportXML = new javax.swing.JMenuItem();
        ExportXML = new javax.swing.JMenuItem();
        ImportSQL = new javax.swing.JMenuItem();
        ExportSQL = new javax.swing.JMenuItem();
        EOptions = new javax.swing.JMenuItem();
        Exit = new javax.swing.JMenuItem();
        MEdit = new javax.swing.JMenu();
        EditDelete = new javax.swing.JMenuItem();
        EditAdd = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        CreatorInfo = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("EigaTracker");
        setLocation(new java.awt.Point(400, 150));
        setMinimumSize(new java.awt.Dimension(1200, 600));
        addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                formFocusGained(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        ContentTable.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        ContentTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Type", "Views"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ContentTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        ContentTable.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ContentTable.setRowHeight(40);
        ContentTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ContentTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(ContentTable);

        SearchGroup.add(MoviesRb);
        MoviesRb.setText("Movies");
        MoviesRb.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        MoviesRb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MoviesRbActionPerformed(evt);
            }
        });

        SearchGroup.add(BothRb);
        BothRb.setSelected(true);
        BothRb.setText("Both");
        BothRb.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BothRb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BothRbActionPerformed(evt);
            }
        });

        AddButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        AddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddButtonActionPerformed(evt);
            }
        });

        RemoveButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        RemoveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemoveButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Search");

        SearchBar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchBarActionPerformed(evt);
            }
        });
        SearchBar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                SearchBarKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                SearchBarKeyTyped(evt);
            }
        });

        SearchGroup.add(SeriesRb);
        SeriesRb.setText("Series");
        SeriesRb.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        SeriesRb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SeriesRbActionPerformed(evt);
            }
        });

        jLayeredPane1.setLayer(MoviesRb, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(BothRb, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(AddButton, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(RemoveButton, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(SearchBar, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(SeriesRb, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(RemoveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SearchBar, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addComponent(MoviesRb)
                        .addGap(60, 60, 60)
                        .addComponent(SeriesRb)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(BothRb)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(AddButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(AddButton, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(SearchBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(MoviesRb)
                            .addComponent(SeriesRb)
                            .addComponent(BothRb)))
                    .addComponent(RemoveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(330, 330, 330)
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1160, Short.MAX_VALUE)
                        .addGap(12, 12, 12))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 401, Short.MAX_VALUE)
                .addGap(31, 31, 31))
        );

        jTabbedPane1.addTab("Content", jPanel1);

        jPanel2.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jPanel2ComponentShown(evt);
            }
        });

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane2.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jScrollPane2ComponentShown(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 48)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("STATS");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel3.setText("Most Watched Movies");

        MCPelicula.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        MCPelicula.setText("00%");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel5.setText("Average Series Comprehension");

        MCSerie.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        MCSerie.setText("00%");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel7.setText("Average Movie Fun");

        MDPelicula.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        MDPelicula.setText("00%");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel9.setText("Average Series Fun");

        jLabel11.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel11.setText("Average Series Views");

        MDSerie.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        MDSerie.setText("00%");

        jLabel13.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel13.setText("Average Movie Views");

        MVSerie.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        MVSerie.setText("0,0");

        MVPelicula.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        MVPelicula.setText("0,0");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel4.setText("Average Movie Comprehension");

        BMovies.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        BMovies.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Movie", "Views"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        BMovies.setRowHeight(40);
        jScrollPane3.setViewportView(BMovies);

        BSeries.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        BSeries.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Series", "Views"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        BSeries.setRowHeight(40);
        jScrollPane4.setViewportView(BSeries);

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel6.setText("Most Watched Series");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(MCPelicula))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addComponent(MCSerie))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(18, 18, 18)
                                .addComponent(MDPelicula))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addGap(18, 18, 18)
                                .addComponent(MDSerie))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addGap(18, 18, 18)
                                .addComponent(MVPelicula))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addGap(18, 18, 18)
                                .addComponent(MVSerie)))
                        .addGap(137, 137, 137)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 568, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 568, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(53, Short.MAX_VALUE))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(MCPelicula)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(MCSerie))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(MDPelicula))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(MDSerie)))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(MVPelicula))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(MVSerie)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(219, Short.MAX_VALUE))
        );

        jScrollPane2.setViewportView(jPanel4);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1184, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 526, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Stats", jPanel2);

        MFile.setText("File");

        ImportXML.setText("Import XML");
        ImportXML.setEnabled(false);
        MFile.add(ImportXML);

        ExportXML.setText("Export XML");
        ExportXML.setEnabled(false);
        MFile.add(ExportXML);

        ImportSQL.setText("Import SQL");
        ImportSQL.setEnabled(false);
        ImportSQL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ImportSQLActionPerformed(evt);
            }
        });
        MFile.add(ImportSQL);

        ExportSQL.setText("Export SQL");
        ExportSQL.setEnabled(false);
        MFile.add(ExportSQL);

        EOptions.setText("Open Options.txt");
        EOptions.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EOptionsActionPerformed(evt);
            }
        });
        MFile.add(EOptions);

        Exit.setText("Exit");
        Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitActionPerformed(evt);
            }
        });
        MFile.add(Exit);

        jMenuBar1.add(MFile);

        MEdit.setText("Edit");

        EditDelete.setText("Delete");
        EditDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditDeleteActionPerformed(evt);
            }
        });
        MEdit.add(EditDelete);

        EditAdd.setText("Add");
        EditAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditAddActionPerformed(evt);
            }
        });
        MEdit.add(EditAdd);

        jMenuBar1.add(MEdit);

        jMenu1.setText("Info");

        CreatorInfo.setText("Creator Info");
        CreatorInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreatorInfoActionPerformed(evt);
            }
        });
        jMenu1.add(CreatorInfo);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BothRbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BothRbActionPerformed
        sOption = 2;
        sRow = -1;
        refrescarCT();
    }//GEN-LAST:event_BothRbActionPerformed

    private void SeriesRbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SeriesRbActionPerformed
        sOption = 1;
        sRow = -1;
        refrescarCT();
    }//GEN-LAST:event_SeriesRbActionPerformed

    private void MoviesRbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MoviesRbActionPerformed
        sOption = 0;
        sRow = -1;
        refrescarCT();
    }//GEN-LAST:event_MoviesRbActionPerformed

    private void SearchBarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SearchBarKeyTyped
        sRow = -1;
        refrescarCT();
    }//GEN-LAST:event_SearchBarKeyTyped

    private void SearchBarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SearchBarKeyPressed

    }//GEN-LAST:event_SearchBarKeyPressed

    private void SearchBarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchBarActionPerformed

    }//GEN-LAST:event_SearchBarActionPerformed

    private void AddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddButtonActionPerformed
        AddWindow addw = new AddWindow();
        addw.setVisible(true);
    }//GEN-LAST:event_AddButtonActionPerformed

    private void RemoveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RemoveButtonActionPerformed
        if(ContentTable.getSelectedRow() != -1){
            int tipo = 0;
            if(ContentTable.getValueAt(ContentTable.getSelectedRow(), 1) == "Serie") tipo = 1;
            String nombre = String.valueOf(ContentTable.getValueAt(ContentTable.getSelectedRow(), 0));
            int conf = JOptionPane.showConfirmDialog(rootPane, "Are you sure you want to delete '" + nombre + "'", "Delete", JOptionPane.OK_CANCEL_OPTION);
            if(conf == 0){
                if(tipo == 0) bd.sentencia("delete from peliculas where nombre = '" + nombre + "';");
                else bd.sentencia("delete from series where nombre = '" + nombre + "';");
            }
        }else JOptionPane.showMessageDialog(rootPane, "Select a row to delete.", "Error", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_RemoveButtonActionPerformed

    private void CreatorInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreatorInfoActionPerformed
        JOptionPane.showMessageDialog(rootPane, "Hugo de la Torre Pizarro");
    }//GEN-LAST:event_CreatorInfoActionPerformed

    private void ContentTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ContentTableMouseClicked
        if (ContentTable.getSelectedRow() == sRow){
            if(ContentTable.getValueAt(ContentTable.getSelectedRow(), 1) == "Pelicula"){
                MovieDetails md = new MovieDetails(String.valueOf(ContentTable.getValueAt(ContentTable.getSelectedRow(), 0)));
                md.setVisible(true);
                sRow = -1;
            }
            else{
                System.out.println("Detalles Serie");
            }
        }else sRow = ContentTable.getSelectedRow();
    }//GEN-LAST:event_ContentTableMouseClicked

    private void formFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusGained
        refrescarCT();
    }//GEN-LAST:event_formFocusGained

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        refrescarCT();
    }//GEN-LAST:event_formWindowActivated

    private void jScrollPane2ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jScrollPane2ComponentShown
        
    }//GEN-LAST:event_jScrollPane2ComponentShown

    private void jPanel2ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jPanel2ComponentShown
        MCPelicula.setText(Double.toString(consultarDouble("select avg(comprension) as 'comprension' from (select avg(comprension) as 'comprension' from registros_peliculas group by pelicula_ref) as deribada;","comprension"))
        + "%");
        MCSerie.setText(Double.toString(consultarDouble("select avg(comprension) as 'comprension' from (select avg(comprension) as 'comprension' from registros_capitulos, capitulos where registros_capitulos.capitulo_ref = capitulos.id group by serie) as deribada;","comprension"))
        + "%");
        MDPelicula.setText(Double.toString(consultarDouble("select avg(diversion) as 'diversion' from (select avg(diversion) as 'diversion' from registros_peliculas group by pelicula_ref) as deribada;","diversion"))
        + "%");
        MDSerie.setText(Double.toString(consultarDouble("select avg(diversion) as 'diversion' from (select avg(diversion) as 'diversion' from registros_capitulos, capitulos where registros_capitulos.capitulo_ref = capitulos.id group by serie) as deribada;","diversion"))
        + "%");
        MVPelicula.setText(Double.toString(consultarDouble("select avg(visualizaciones) as 'visualizaciones' from (select count(*) as 'visualizaciones' from registros_peliculas group by pelicula_ref) as deribada;","visualizaciones")));
        MVSerie.setText(Double.toString(consultarDouble("select avg(visualizaciones) as 'visualizaciones' from (select count(*) as 'visualizaciones' from registros_capitulos, capitulos where registros_capitulos.capitulo_ref = capitulos.id group by serie) as deribada;","visualizaciones")));
        mostrarBM();
        mostrarBS();
        
    }//GEN-LAST:event_jPanel2ComponentShown

    private void EditDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditDeleteActionPerformed
        if(ContentTable.getSelectedRow() != -1){
            int tipo = 0;
            if(ContentTable.getValueAt(ContentTable.getSelectedRow(), 1) == "Serie") tipo = 1;
            String nombre = String.valueOf(ContentTable.getValueAt(ContentTable.getSelectedRow(), 0));
            int conf = JOptionPane.showConfirmDialog(rootPane, "Are you sure you want to delete '" + nombre + "'", "Delete", JOptionPane.OK_CANCEL_OPTION);
            if(conf == 0){
                if(tipo == 0) bd.sentencia("delete from peliculas where nombre = '" + nombre + "';");
                else bd.sentencia("delete from series where nombre = '" + nombre + "';");
            }
        }else JOptionPane.showMessageDialog(rootPane, "Select a row to delete.", "Error", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_EditDeleteActionPerformed

    private void EditAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditAddActionPerformed
        AddWindow addw = new AddWindow();
        addw.setVisible(true);
    }//GEN-LAST:event_EditAddActionPerformed

    private void ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitActionPerformed
        bd.stopXampp();
        System.exit(0);
    }//GEN-LAST:event_ExitActionPerformed

    private void ImportSQLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ImportSQLActionPerformed
        SelectRoute sr = new SelectRoute(this, "SQL");
        sr.setVisible(true);
    }//GEN-LAST:event_ImportSQLActionPerformed

    private void EOptionsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EOptionsActionPerformed
        File f = new File("src\\Options\\Options.txt");
        Desktop desktop = Desktop.getDesktop();
        if(f.exists()) try {
            desktop.open(f);
        } catch (IOException ex) {
            Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println(ex.getMessage());
        }
    }//GEN-LAST:event_EOptionsActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        
    }//GEN-LAST:event_formWindowClosed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        bd.stopXampp();
        System.out.println("Bye bye!");
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainMenu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddButton;
    private javax.swing.JTable BMovies;
    private javax.swing.JTable BSeries;
    private javax.swing.JRadioButton BothRb;
    private javax.swing.JTable ContentTable;
    private javax.swing.JMenuItem CreatorInfo;
    private javax.swing.JMenuItem EOptions;
    private javax.swing.JMenuItem EditAdd;
    private javax.swing.JMenuItem EditDelete;
    private javax.swing.JMenuItem Exit;
    private javax.swing.JMenuItem ExportSQL;
    private javax.swing.JMenuItem ExportXML;
    private javax.swing.JMenuItem ImportSQL;
    private javax.swing.JMenuItem ImportXML;
    private javax.swing.JLabel MCPelicula;
    private javax.swing.JLabel MCSerie;
    private javax.swing.JLabel MDPelicula;
    private javax.swing.JLabel MDSerie;
    private javax.swing.JMenu MEdit;
    private javax.swing.JMenu MFile;
    private javax.swing.JLabel MVPelicula;
    private javax.swing.JLabel MVSerie;
    private javax.swing.JRadioButton MoviesRb;
    private javax.swing.JButton RemoveButton;
    private javax.swing.JTextField SearchBar;
    private javax.swing.ButtonGroup SearchGroup;
    private javax.swing.JRadioButton SeriesRb;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    // End of variables declaration//GEN-END:variables
    
    final void setImagenes(){
        cargarIMG("..\\Images\\add.png", AddButton, 40);
        cargarIMG("..\\Images\\delete.png", RemoveButton, 40);
    }
    
    
    private void cargarIMG(final String _url, final JButton _boton, final int _size) {
        ImageIcon icon = new ImageIcon(getClass().getResource(_url));
        ImageIcon icono = new ImageIcon(icon.getImage().getScaledInstance(_size, _size, Image.SCALE_DEFAULT));
        _boton.setIcon(icono);
    }
    
    
    private void mostrarCT(final String _sql, final boolean _borrar, final int _opt){
        DefaultTableModel tm = (DefaultTableModel) ContentTable.getModel();
        ContentTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        
        if(_borrar) tm.setRowCount(0);
        
        try {
            ResultSet rs1 = bd.consulta(_sql);
            while (rs1.next()) {
                String nombre = rs1.getString("nombre");
                String tipo;
                if(_opt == 0) tipo = "Pelicula";
                else tipo = "Serie";
                ResultSet rs2 = null;
                int vistas = 0;
                switch(_opt){
                    case 0 -> {
                        rs2 = bd.consulta("select count(*) as vistas from registros_peliculas where pelicula_ref = '" + nombre + "';");
//                        vistas = rs2.getInt("vistas");
                        while (rs2.next()) {
                            vistas = rs2.getInt("vistas");
                        }
                        rs2.close();
                    }
                    case 1 -> {
                        rs2 = bd.consulta("select count(*) as 'vistas' from registros_capitulos where capitulo_ref in (select id from capitulos where serie = '" + nombre + "');");
//                        vistas = rs2.getInt("vistas");
                        while (rs2.next()) {
                            vistas = rs2.getInt("vistas");
                        }
                        rs2.close();
                    }
                    case 2 -> {}
                    default -> {}
                }                
                Object nuev[] = {nombre, tipo, vistas};
                tm.addRow(nuev);
            }
            bd.cerrarConexion();
        } catch (SQLException ex) {
            System.out.println("Error: " + ex.getMessage() + "\n" + ex.getCause());
        }
    }
    
    private void refrescarCT(){
        switch (sOption) {
            case 0:
                mostrarCT("select * from peliculas where nombre like '%" + SearchBar.getText() + "%';", true, 0);
                break;
            case 1:
                mostrarCT("select * from series where nombre like '%" + SearchBar.getText() + "%';", true, 1);
                break;
            case 2:
                mostrarCT("select * from peliculas where nombre like '%" + SearchBar.getText() + "%';", true, 0);
                mostrarCT("select * from series where nombre like '%" + SearchBar.getText() + "%';", false, 1);
                break;
            default:
                System.out.println("Error en sOption");
                break;
        }
    }
    
    private void mostrarBM(){
        DefaultTableModel tm = (DefaultTableModel) BMovies.getModel();
        BMovies.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        
        tm.setRowCount(0);
        
        try {
            String sql = "select nombre, vistas from (select pelicula_ref as 'nombre', count(*) as 'vistas' from registros_peliculas group by pelicula_ref) as deribada2 having vistas = (select max(vistas) from (select count(*) as 'vistas' from registros_peliculas group by pelicula_ref) as deribada);";
            ResultSet rs = bd.consulta(sql);
            while (rs.next()) {
                String nombre = rs.getString("nombre");
                int vistas = rs.getInt("vistas");
                Object nuev[] = {nombre, vistas};
                tm.addRow(nuev);
            }
            bd.cerrarConexion();
        } catch (SQLException ex) {
            System.out.println("Error: " + ex.getMessage() + "\n" + ex.getCause());
        }
    }
    
    private void mostrarBS(){
        DefaultTableModel tm = (DefaultTableModel) BSeries.getModel();
        BSeries.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        
        tm.setRowCount(0);
        
        try {
            String sql = "select serie as 'nombre', max(vistas) as 'vistas' from (select serie, count(*) as 'vistas' from capitulos,registros_capitulos where capitulos.id = capitulo_ref group by serie) as deribada1;";
            ResultSet rs = bd.consulta(sql);
            while (rs.next()) {
                String nombre = rs.getString("nombre");
                int vistas = rs.getInt("vistas");        
                Object nuev[] = {nombre, vistas};
                tm.addRow(nuev);
            }
            bd.cerrarConexion();
        } catch (SQLException ex) {
            System.out.println("Error: " + ex.getMessage() + "\n" + ex.getCause());
        }
    }
    
    private int consultarInt(final String _sql, final String _valor){
        ResultSet rs = bd.consulta(_sql);
        try {
            int r = rs.getInt(_valor);
            bd.cerrarConexion();
            return r;
        } catch (SQLException ex) {
            Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println(ex.getMessage());
            return 0;
        }
    }
    
    private double consultarDouble(final String _sql, final String _valor){
        ResultSet rs = bd.consulta(_sql);
        try {
            double r = 0.0;
            while(rs.next()){
                r = rs.getDouble(_valor);
                break;
            }
            bd.cerrarConexion();
            return r;
        } catch (SQLException ex) {
            Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println(ex.getMessage());
            return 0.0;
        }
    }
    
    private String consultarString(final String _sql, final String _valor){
        ResultSet rs = bd.consulta(_sql);
        try {
            String r = rs.getString(_valor);
            bd.cerrarConexion();
            return r;
        } catch (SQLException ex) {
            Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println(ex.getMessage());
            return "Error";
        }
    }
    
    public void StartUP(final String[] _options){
        bd.StartUp(_options);
        refrescarCT();
        setImagenes();
    }
    
    public void importSql(final String _path){
        bd.sentencia("source " + _path);
        System.out.println("source " + _path);
    }
    
}